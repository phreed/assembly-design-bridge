 
package edu.vanderbilt.isis.meta;

/**
* Advanced Vehicle Make (AVM) META interactive communications.
* This is the schema for communication through the Live-Sync
* Component Design Bridge (CDB).
* There are two main messages, the header which contains
* information used for routing and the payload which is
* processed by the end-points.
*/

import "XsdTypes.proto";
import "AssemblyInterface.proto";

/**
* This message describes the information which may be
* used for routing of messages.
* 
*/
message Edit {
    enum ActionType {
      /** do whatever is needed to dispose of the items */
      DISCARD = 0;
      /** express interest in something */
      INTEREST = 1;
      /** express interest in something */
      DISINTEREST = 2;
      /** insert new or update all the fields */
      POST = 3;
    }
    required ActionType action = 1 [default=POST];

    optional ID id = 2;
    repeated string topic = 3;
    optional string origin = 4;
    optional uint32 sequence = 5;

    repeated Notice notices = 6;
    repeated RawPayload raw = 7;
}

/**
* Of particular interest is the payload.
* The payload is actually the Payload message but is
* represented in bytes so as not to incur the parsing
* cost prematurely. 
*/
message RawPayload {
    enum ActionType {
      /** do whatever is needed to dispose of the items */
      DISCARD = 0;
      /** insert new or update all the fields */
      INSERT = 1;
      /** insert new or update all the fields */
      REPLACE = 2;
      /** update the fields explicitly specified */
      UPDATE = 3;
    }
    enum EncodingType {
      /** XML */
      XML = 0;
      /** A protocol buffer representation */
      PROTOBUF = 1;
      /** search path */
      ENVIRONMENT = 2;
    }
    required ActionType action = 1 [default=REPLACE];
    required EncodingType encoding = 2 [default=PROTOBUF];
    required bytes payload = 3;
}

/**
* The payload is a set of objects which have changed.
* They will be used to perform the requested action.
* This is the message encoded into the RawPayload::payload
* field when the RawPayload::encoding is PROTOBUF.
*/
message Payload {
    optional AssembliesType assemblies = 1;
    repeated CADComponentType components = 2;
    repeated ConstraintType constraints = 3;
    repeated ParametricParametersType parameters = 4;
}

/**
* The environment specified named properties 
* in the environment where the edit was performed.
* This will typically be things like the Creo Component path list.
*/
message Environment {
    required string name = 1;
    repeated string value = 2;
}

/**
* Usually used for reporting faults of various types.
* May also be used for generating general acknowledgements.
*/
message Notice {
    enum NoticeType {
      /** the bridge received your post and has acknowedged it */
      BACK = 0;
      /** what you asked for was received */
      ACK = 1;
      /** what you asked for was completed */
      DONE = 2;
      /** something interesting happened */
      INFO = 3;
      /** there was a problem but the model is still consistent (probably) */
      WARN = 4;
      /** there was a severe problem but it "worked" */
      FAULT = 5;
      /** no part of the request was performed */
      REJECT = 6;
      /** the target model was probably damaged */
      FAIL = 7;
    }
    required NoticeType type = 1 [default=BACK];
    /** the unique identifier */
    optional ID _id = 2;
    /** intended for reading by a human */
    optional string msg = 3;
    /** intended for processing by machine */
    optional bytes code = 4;
}

