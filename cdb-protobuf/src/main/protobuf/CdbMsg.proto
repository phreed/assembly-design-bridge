 
package edu.vanderbilt.isis.meta;

/**
* Advanced Vehicle Make (AVM) META interactive communications.
* This is the schema for communication through the Live-Sync
* Component Design Bridge (CDB).
* There are two main messages, the header which contains
* information used for routing and the payload which is
* processed by the end-points.
*/

import "XsdTypes.proto";
import "AssemblyInterface.proto";

/**
* This message describes the information which may be
* used for routing of messages.
* 
*/
message Control {
    enum ActionType {
      /** express interest in something */
      INTEREST = 0;
      /** express interest in something */
      DISINTEREST = 1;
      /** insert new or update all the fields */
      REPLACE = 2;
      /** update the fields explicitly specified */
      UPDATE = 3;
      /** do whatever is needed to dispose of the items */
      DISCARD = 4;
    }
    required ActionType action = 1;

    optional ID id = 2;
    repeated string topic = 3;

    repeated Notice notices = 4;
    repeated PayloadRaw payload = 5;

}

/**
* Of particular interest is the payload.
* The payload is actually the Payload message but is
* represented in bytes so as not to incur the parsing
* cost prematurely. 
*/
message PayloadRaw {
    enum EncodingType {
      /** XML */
      XML = 0;
      /** express interest in something */
      PB = 1;
    }
    required EncodingType encoding = 1;
    required bytes payload = 2;
}

/**
* The payload is a set of objects which have changed.
* They will be used to perform the requested action.
*/
message Payload {
    optional AssembliesType assemblies = 1;
    optional CADComponentType cadComponent = 2;
}

/**
* Usually used for reporting faults of various types.
* May also be used for generating general acknowledgements.
*/
message Notice {
    enum NoticeType {
      /** the target model was probably damaged */
      FAIL = 0;
      /** no part of the request was performed */
      REJECT = 1;
      /** there was a severe problem but it "worked" */
      ERROR = 2;
      /** there was a problem but the model is still consistent (probably) */
      WARN = 3;
      /** something interesting happened */
      INFO = 4;
      /** what you asked for was completed */
      ACK = 5;
    }
    required NoticeType type = 1;
    optional ID _id = 2;
    optional string msg = 3;
    optional string code = 4;
}

